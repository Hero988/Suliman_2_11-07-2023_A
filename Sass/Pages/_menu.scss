
.image-styling {
    height: 350px;
    width: 100vw;
}

.menu-container-ohmyfood {
    position: relative;

    top: -56px;

    // This sets the width and height of the container to 100px each.
    width: 100vw;
    height: 1215px;

    padding-bottom: 50px;
    
    // This sets the top-left and top-right border radii to 10px each, making the top corners rounded.
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;

    overflow-x: hidden;
    overflow-y: hidden;
    
    // This sets the background color of the container to F6F6F6.
    background-color: #F6F6F6;
}

.menu-title {
    position: relative;
    top: 36px;
    right: -23px;
}

// The styles for the menu-container-main
.menu-container-main {
    // Using display: flex; makes the container a flex container and its children flex items.
    display: flex;
    // This makes the main axis vertical and lays out the flex items in a column.
    flex-direction: column;
    // This adds some space between the flex items.
    gap: 20px;

    margin-left:-6px;

    margin-top: 27px;
}

// The styles for the grid
.grid {
    // This makes the grid a flex container and its children flex items.
    display: flex;
    // This makes the main axis vertical and lays out the flex items in a column.
    flex-direction: column;
    // This adds some space between the flex items.
    gap: 20px;
}

// Define the animation.
// @keyframes fadeIn {...}: This defines the fadeIn animation. 
// The animation starts at 0% (with opacity: 0 and visibility: hidden), and ends at 100% (with opacity: 1 and visibility: visible). 
// This means that elements will transition from being completely transparent and invisible to fully opaque and visible.
@keyframes fadeIn {
    0% {
        opacity: 0;
        visibility: hidden;
    }
    100% {
        opacity: 1;
        visibility: visible;
    }
}

@keyframes slideUpFadeIn {
    0% {
        opacity: 0;
        transform: translateY(50px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.enchanted-plate-ohmyfood-new {
    height: 1247px;
}

    // The styles for the card
    .card {
        position: relative;
        max-width: 350px;
        min-width: 200px;
        height: 50px;
        // This makes the card a flex container and its children flex items.
        display: flex;
        // This makes the main axis vertical and lays out the flex items in a column.
        flex-direction: column;
        // This aligns the flex items to the right.
        align-items: flex-end;
        // This justifies the content to the space-between.
        justify-content: space-between;
        // This sets the padding inside the card.
        padding: 10px;
        box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);

        align-items: flex-start; /* Align items to the start (left side) of the card */
        justify-content: space-between; /* Distribute space evenly between items */

        border-radius: 20px;
        background-color: white;

        transition: width 0.3s ease;

        margin-left: 22px;
        top: 11px;

        opacity: 0; /* Hide the card initially */

        overflow: hidden;

        /* Add the animation */
        animation: slideUpFadeIn 2s ease-out;

        // cards remain visible after the animation is complete.
        animation-fill-mode: forwards;

        /* Hide the checkmark initially and set its width to 0 */
        .checkmark, .custom-checkmark {
            opacity: 0;
            width: 0;
            /* Start with the element's width at 0 */
            /* The checkmark is moved 100px to the right (offscreen) */
            transform: translateX(100px); 
            /* Transition both the width, opacity and transform properties */
            transition: width 0.5s, opacity 0.5s, transform 0.5s; 
        }
    }

    .enchanted-plate {
        height: 71px;
    }

    .card-text-menu {
        margin: 0;
        font-size: 16.85px;
        margin-top: 11px;
        transition: width 0.3s ease;
    
        white-space: nowrap;  // Prevents the text from wrapping to the next line
        overflow: hidden;  // Clips the text if it overflows
        text-overflow: ellipsis;  // Displays an ellipsis ("...") to represent clipped text
        width: 310px;  // Adjust this value as needed. This sets the maximum width before text gets clipped.
        display: block;  // Treat this element as a block level element
    }

    .card-content {
        display: flex;
        flex-direction: column;
        align-items: flex-start; /* Align items to the start (left side) of the card */
        justify-content: space-between; /* Distribute space evenly between items */
}    

/* When the card is hovered over */
.card:hover {
    position: relative;
    cursor: pointer;

    .card-price {
        /* Moves the card price to the right when the card is hovered on */
        right: 75px;
    }

    .card-text-menu {
        width: 250px;
    }

    /* Make the checkmark visible and increase its width */
    .checkmark, .custom-checkmark {
        opacity: 1;
        /* Increase the width to the original size */
        width: 70px; /* Update this value to the original width of your checkmark */
        /* Move the checkmark to its original position */
        transform: translateX(0); 
    }

    /* Add a spin effect for .custom-checkmark */
    .custom-checkmark {
        transform: translateX(0) rotate(0deg);  // Adding a rotate of 360 degrees
        transition: transform 0.5s ease-out;  // This adds a smooth transition effect
    }
}

// Unpause the animation for each card at the right time.
// @for $i from 1 through 9 {...}: This is a loop that generates SCSS for the first 9 .card elements nested within a .grid element.
@for $i from 1 through 10 {
    // .grid .card:nth-of-type(#{$i}) {...}: This targets the i-th .card within each .grid. #{$i} is a variable that holds the current number in the loop, 
    // and nth-of-type is a CSS selector that matches elements of a certain type, based on their order among their siblings.
    .grid .card:nth-of-type(#{$i}) {
        // Unpause the animation after a delay. Each card's delay is slightly longer than the last.
        //  This delays the start of the animation. Each .card has a slightly longer delay than the one before it, creating a staggered animation effect.
        animation-delay: $i * 0.5s;
        // This resumes the paused animation, causing each .card to start fading in after its delay period.
        animation-play-state: running;
        // In simpler terms, this code makes each card fade in one by one, each half a second apart, from being completely invisible to fully visible.
    }
}

.checkmark {
    position: absolute;

    font-size: 25px;

    color: white;

    width: 70px;
    height: 70px;

    // Set the background color to green.
    background-color: $tertiary-color;   

    // Set the top-right and bottom-right corners to be round.
    border-top-right-radius: 20px;
    border-bottom-right-radius: 20px;

    top: 0px;
    right: 0px;
    
} 

.checkmark-enchanted-plate {
    @extend .checkmark;
    height: 93px;
    top: 0px;
}



.custom-checkmark {
    position: relative;
    right: -25px;
    top: 24px;
    height: 100px;
    width: 100px;
    transform: rotate(50deg);
}

.card-title {
    position: relative;
    // This sets the margin to 0 to remove any space around the text.
    margin: 0;
    font-weight: bold;
    font-size: 19px;
    top: 4px;
}

.card-price {
    position: absolute;
    font-weight: bold;
    font-size: 16px;
    right: 13px;
    top: 44px;
    transition: right 0.3s ease;
    width: auto;   // Allow it to size according to its content
    max-width: calc(100% - 20px);  // Ensure it doesn't overflow the card's width
}

.grid-title {
    position: relative;
    right: -26px;
    top: 20px;
    padding-bottom: 10px;

    // This adds a half line under the text.
    // The line is 1px high, spans 50% of the width of the text, and is green.
    border-bottom: 3px solid $tertiary-color;

    // This adjusts the width of the line to make it a "half line".
    // The line is centered by setting the left and right margins to auto.
    width: 10%;

    // This prevents the text from wrapping to the next line.
    white-space: nowrap;
}

/* The .visually-hidden class is a technique used in CSS to hide elements in a way that they remain accessible to assistive technologies like screen readers.
Fix W3*/
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0,0,0,0);
    border: 0;
}

    // The styles for the card
    .card-enchanted-plate {
        position: relative;
        max-width: 350px;
        min-width: 200px;
        height: 71px;
        // This makes the card a flex container and its children flex items.
        display: flex;
        // This makes the main axis vertical and lays out the flex items in a column.
        flex-direction: column;
        // This aligns the flex items to the right.
        align-items: flex-end;
        // This justifies the content to the space-between.
        justify-content: space-between;
        // This sets the padding inside the card.
        padding: 10px;
        box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);

        align-items: flex-start; /* Align items to the start (left side) of the card */
        justify-content: space-between; /* Distribute space evenly between items */

        border-radius: 20px;
        background-color: white;

        transition: width 0.3s ease;

        margin-left: 22px;
        top: 11px;

        opacity: 0; /* Hide the card initially */

        overflow: hidden;

        .card-text-menu {
            margin: 0;
            margin-top: 11px;
            transition: width 0.3s ease; 
            white-space: nowrap;  // Prevents the text from wrapping to the next line
            overflow: hidden;  // Clips the text if it overflows
            text-overflow: ellipsis;  // Displays an ellipsis ("...") to represent clipped text
            width: 310px;  // Adjust this value as needed. This sets the maximum width before text gets clipped.
            display: block;  // Treat this element as a block level element
        }

        /* Hide the checkmark initially and set its width to 0 */
        .checkmark, .custom-checkmark {
            opacity: 0;
            width: 0;
            /* Start with the element's width at 0 */
            /* The checkmark is moved 100px to the right (offscreen) */
            transform: translateX(100px); 
            /* Transition both the width, opacity and transform properties */
            transition: width 0.5s, opacity 0.5s, transform 0.5s; 
        }
    }

@include PC {
    .menu-container-ohmyfood {
        position: relative;

        overflow: hidden;

        top: -2px;

        // This sets the width and height of the container to 100px each.
        width: 2103px;
        height: 866px;

        overflow-x: hidden;

        padding-bottom: 50px;
        
        // This sets the top-left and top-right border radii to 10px each, making the top corners rounded.
        border-top-left-radius: 50px;
        border-top-right-radius: 50px;
        
        // This sets the background color of the container to F6F6F6.
        background-color: #F6F6F6;
        
    }

    .grid-title-dessert-enchanted-plate {
        top: 240px;
    }

    .grid-title-main-dish-enchanted-plate {
        top: 155px;
    }

    .card-8 {
        top: 112px;
        right: 774px;
    }

    .menu-container-ohmyfood-enchanted-plate {
        position: relative;

        top:-248px;
        right: 18px;

        // This sets the width and height of the container to 100px each.
        width: 2041px;
        height: 840px;

        padding-bottom: 50px;
        
        // This sets the top-left and top-right border radii to 10px each, making the top corners rounded.
        border-top-left-radius: 50px;
        border-top-right-radius: 50px;
        
        // This sets the background color of the container to F6F6F6.
        background-color: #F6F6F6;
    }

    // The styles for the grid
    .grid {
        // This makes the grid a flex container and its children flex items.
        display: flex;
        // This makes the main axis vertical and lays out the flex items in a column.
        flex-direction: row;
        // This adds some space between the flex items.
        gap: 20px;
    }

    .hide {
        display: none;
    }

    .hide2 {
        opacity: 0;
    }

    // The styles for the menu-container-main
    .menu-container-main {
        // Using display: flex; makes the container a flex container and its children flex items.
        display: flex;
        // This makes the main axis vertical and lays out the flex items in a column.
        flex-direction: column;
        // This adds some space between the flex items.
        gap: 111px;

        margin-top: 27px;
    }

    .grid-2 {
        // This makes the grid a flex container and its children flex items.
        display: flex;
        // This makes the main axis vertical and lays out the flex items in a column.
        flex-direction: row;
        // This adds some space between the flex items.
        gap: 20px;

        margin-top: 52px;
    }

    .grid-3 {
        // This makes the grid a flex container and its children flex items.
        display: flex;
        // This makes the main axis vertical and lays out the flex items in a column.
        flex-direction: row;
        // This adds some space between the flex items.
        gap: 20px;

        margin-top: 60px;           
    }

    .Enchanted-Plate {
        height: 524px;
    }

    .card-3 {
        top:109px;
        right: 778px;
    }

    // The styles for the card
    .card {
        position: relative;
        width: 350px;
        height: 50px;
        // This makes the card a flex container and its children flex items.
        display: flex;
        // This makes the main axis vertical and lays out the flex items in a column.
        flex-direction: column;
        // This aligns the flex items to the right.
        align-items: flex-end;
        // This justifies the content to the space-between.
        justify-content: space-between;
        // This sets the padding inside the card.
        padding: 10px;
        box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);

        align-items: flex-start; /* Align items to the start (left side) of the card */
        justify-content: space-between; /* Distribute space evenly between items */

        border-radius: 20px;
        background-color: white;

        transition: width 0.3s ease;

        margin-left: 0px;

        opacity: 0; /* Hide the card initially */

        overflow: hidden;

        .card-text-menu {
            margin: 0;
            margin-top: 11px;
            transition: width 0.3s ease; 
            white-space: nowrap;  // Prevents the text from wrapping to the next line
            overflow: hidden;  // Clips the text if it overflows
            text-overflow: ellipsis;  // Displays an ellipsis ("...") to represent clipped text
            width: 310px;  // Adjust this value as needed. This sets the maximum width before text gets clipped.
            display: block;  // Treat this element as a block level element
        }

        /* Hide the checkmark initially and set its width to 0 */
        .checkmark, .custom-checkmark {
            opacity: 0;
            width: 0;
            /* Start with the element's width at 0 */
            /* The checkmark is moved 100px to the right (offscreen) */
            transform: translateX(100px); 
            /* Transition both the width, opacity and transform properties */
            transition: width 0.5s, opacity 0.5s, transform 0.5s; 
        }
    }

     // The styles for the card
    .card-enchanted-plate {
        position: relative;
        width: 350px;
        min-width: 200px;
        height: 71px;
        // This makes the card a flex container and its children flex items.
        display: flex;
        // This makes the main axis vertical and lays out the flex items in a column.
        flex-direction: column;
        // This aligns the flex items to the right.
        align-items: flex-end;
        // This justifies the content to the space-between.
        justify-content: space-between;
        // This sets the padding inside the card.
        padding: 10px;
        box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);

        align-items: flex-start; /* Align items to the start (left side) of the card */
        justify-content: space-between; /* Distribute space evenly between items */

        border-radius: 20px;
        background-color: white;

        transition: width 0.3s ease;

        margin-left: 22px;
        top: 11px;

        opacity: 0; /* Hide the card initially */

        overflow: hidden;

        .card-text-menu {
            margin: 0;
            margin-top: 11px;
            transition: width 0.3s ease; 
            white-space: nowrap;  // Prevents the text from wrapping to the next line
            overflow: hidden;  // Clips the text if it overflows
            text-overflow: ellipsis;  // Displays an ellipsis ("...") to represent clipped text
            width: 200px;  // Adjust this value as needed. This sets the maximum width before text gets clipped.
            display: block;  // Treat this element as a block level element
        }

        /* Hide the checkmark initially and set its width to 0 */
        .checkmark, .custom-checkmark {
            opacity: 0;
            width: 0;
            /* Start with the element's width at 0 */
            /* The checkmark is moved 100px to the right (offscreen) */
            transform: translateX(100px); 
            /* Transition both the width, opacity and transform properties */
            transition: width 0.5s, opacity 0.5s, transform 0.5s; 
        }
    }
}


@media (min-width: 450px) and (max-width: 990px) {
    .menu-container-ohmyfood {
        position: relative;

        top: -32px;

        // This sets the width and height of the container to 100px each.
        width: 126vw;
        height: 1275px;

        padding-bottom: 50px;
        
        // This sets the top-left and top-right border radii to 10px each, making the top corners rounded.
        border-top-left-radius: 50px;
        border-top-right-radius: 50px;
        
        // This sets the background color of the container to F6F6F6.
        background-color: #F6F6F6;

        overflow-x: hidden;

    }

    .menu-container-main {
        margin-left: -14px;
    }

    .hide2 {
        opacity: 0;   
    }

    
    .menu-container-ohmyfood-enchanted-plate {
        position: relative;
    
        top:-383px;
        height: 1266px;

        // This sets the width and height of the container to 100px each.
        width: 1000px;

        padding-bottom: 50px;
        
        // This sets the top-left and top-right border radii to 10px each, making the top corners rounded.
        border-top-left-radius: 50px;
        border-top-right-radius: 50px;
        
        // This sets the background color of the container to F6F6F6.
        background-color: #F6F6F6;

        right: 6px;

    }

    .grid {
        margin-left: 74px;
    }

    .hide {
        display: none;
    }

    .card-4 {
        margin-left: 222px;
    }

    .menu-title {
        right: -118px;
    }
}

/*
@media (min-width: 991px) and (max-width: 1471px) {
    .card-3 {
        right: 508px;
        top: 116px;
    }

    .card-2 {
        right: 482px;
        top: 123px
    }

    .card-5 {
        top:364px;
        right: 822px;;
    }

    .card-7 {
        top: 268px;
        right: 824px;
    }

    .card-9 {
        top: 148px;
        right: 411px;
    }
}
*/

