.city-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  height: 100%;
  padding-top: 5%;
  background-color: #EAEAEA;
  margin-top: 5px;
}

.city-text {
  color: #4B4B4B;
  font-weight: 700;
  position: relative;
  top: -10px;
  left: 10px;
  padding-bottom: 10px;
}

.location-dot-custom {
  position: relative;
  top: -15px;
  right: 125px;
}

.menu-content-container, #restaurants-section {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 100%;
  background-color: #F6F6F6;
}

.menu-text-containter, .footer-text-containter {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.menu-text-picked {
  margin-top: -20px;
}

.menu-row {
  padding: 10px;
  margin: 20px 0;
}

.menu-header {
  font-size: 28px;
  font-weight: 700;
}

.menu-text {
  font-size: 18px;
}

.how-it-works-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding-top: 80px;
  padding-bottom: 120px;
}

.section-title {
  position: relative;
  right: 120px;
  font-size: 24px;
  font-weight: 700;
  bottom: 20px;
}

.cards-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 20px;
}

.card, .card-enchanted-plate, .card3 {
  width: 350px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background-color: #F6F6F6;
  border-radius: 30px;
  padding: 10px;
  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);
}

.card3 {
  background-color: #F5EDFF;
}

.icon-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

.card-number {
  position: relative;
  font-size: 16px;
  color: white;
  top: 15px;
  left: -19px;
  padding: 10px;
  background-color: #9356DC;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 5px;
  height: 5px;
}

.card-text-how-it-works, .card-header, .card-header-4, .card-header-3, .card-header-2, .card-text-restaurant {
  position: relative;
  font-size: 18px;
  font-weight: 700;
  text-align: center;
  top: -13px;
  right: -82px;
}

.custom-icon-style {
  position: relative;
  color: #7E7E7E;
  right: 300px;
  top: 15px;
  font-size: 23px;
}

.custom-store-icon-style {
  position: relative;
  color: #9356DC;
  right: 301px;
  top: 17px;
  font-size: 21px;
}

.card-text-restaurant {
  top: -10px;
  right: -77px;
}

#restaurants-section {
  padding: 36px 0;
  padding-top: 100px;
}

.section-title-restaurant {
  position: relative;
  right: 120px;
  font-size: 24px;
  font-weight: 700;
  bottom: 20px;
  top: -51px;
}

.cards-container-restaurant {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 20px;
}

.card-image {
  position: relative;
  width: 370px;
  height: 186px;
  object-fit: cover;
  object-position: center;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
  top: -21px;
}

.card-restaurant {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background-color: #F6F6F6;
  border-radius: 30px;
  padding: 10px;
  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);
  position: relative;
  width: 350px;
  height: 218px;
  background-color: #FFFFFF;
  margin: 30px;
  padding-bottom: 0px;
}

.card-new {
  position: absolute;
  z-index: 9999;
  top: 1038px;
  right: 31px;
  width: 110px;
  height: 35px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background-color: #99E2D0;
  border-radius: 5px;
  font-size: 16px;
  font-weight: bold;
  margin: 0;
  padding: 0;
}

.card-new-text {
  color: #008766;
}

.card-new-2 {
  position: absolute;
  z-index: 9999;
  top: 1348px;
  right: 31px;
  width: 110px;
  height: 35px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background-color: #99E2D0;
  border-radius: 5px;
  font-size: 16px;
  font-weight: bold;
  margin: 0;
  padding: 0;
}

a {
  color: inherit;
  text-decoration: none;
  cursor: pointer;
}

.card-header, .card-header-4, .card-header-3, .card-header-2 {
  font-size: 20px;
  top: -8px;
  right: 102px;
}

.card-text-restaurants {
  position: relative;
  font-size: 20px;
  right: -16px;
  top: -1px;
}

.card-header-2 {
  right: 79px;
}

.card-header-3 {
  right: 135px;
}

.card-header-4 {
  right: 109px;
}

@media (min-width: 991px) {
  .city-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    margin: 10px;
    padding: 10px;
    height: fit-content;
    width: max-content;
    background-color: white;
  }
  .city-text {
    color: #4B4B4B;
    font-weight: 700;
    position: relative;
    font-size: 25px;
    top: -10px;
    left: 77px;
    padding-bottom: 10px;
  }
  .location-dot-custom {
    position: relative;
    font-size: 25px;
    top: -15px;
    right: 134px;
  }
  #restaurants-section {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    height: 100%;
    background-color: #F6F6F6;
    padding: 36px 0;
    padding-top: 100px;
  }
  .section-title-restaurant {
    position: relative;
    right: 140px;
    font-size: 30px;
    font-weight: 700;
    bottom: 20px;
    top: -51px;
  }
  .cards-container-restaurant {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 20px;
  }
}
@media (min-width: 768px) and (max-width: 990px) {
  .city-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    margin: 10px;
    padding: 10px;
    height: fit-content;
    width: max-content;
    background-color: white;
  }
  .city-text {
    color: #4B4B4B;
    font-weight: 700;
    position: relative;
    font-size: 25px;
    top: -10px;
    left: 77px;
    padding-bottom: 10px;
  }
  .location-dot-custom {
    position: relative;
    font-size: 25px;
    top: -15px;
    right: 134px;
  }
  #restaurants-section {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    height: 100%;
    background-color: #F6F6F6;
    padding: 36px 0;
    padding-top: 100px;
  }
  .section-title-restaurant {
    position: relative;
    right: 140px;
    font-size: 30px;
    font-weight: 700;
    bottom: 20px;
    top: -51px;
  }
  .cards-container-restaurant {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 20px;
  }
}
/* Style for a custom left arrow */
.arrow-left-custom {
  /* Set the position of the arrow to relative, which means the following right position will be relative to its normal position in the flow of the document. */
  position: relative;
  /* Move the arrow to the right by 363 pixels from its normal position. Positive values for the right property move the element to the right. */
  right: 363px;
  /* Set the font size of the arrow to 20 pixels. */
  font-size: 20px;
  /* Set the color of the arrow to #353535, a dark gray. */
  color: #353535;
}

/* Style for an image */
.image-styling {
  /* Set the height of the image to 350 pixels. */
  height: 350px;
  /* Set the width of the image to 450 pixels. */
  width: 450px;
}

/* Style for the container that holds the menu for the Oh My Food restaurant */
.menu-container-ohmyfood {
  /* Set the position of the container to relative, which means the following top position will be relative to its normal position in the flow of the document. */
  position: relative;
  /* Move the container up by 59 pixels from its normal position. Negative values for the top property move the element upwards. */
  top: -59px;
  /* Set the width of the container to 420 pixels. */
  width: 420px;
  /* Set the height of the container to 1200 pixels. */
  height: 1200px;
  /* Add padding at the bottom of the container. This will create 50 pixels of space between the content of the container and its bottom border. */
  padding-bottom: 50px;
  /* Set the border radius of the top-left and top-right corners of the container to 50 pixels to make these corners rounded. */
  border-top-left-radius: 50px;
  border-top-right-radius: 50px;
  /* Set the background color of the container to #F6F6F6, a light gray. */
  background-color: #F6F6F6;
}

/* Style for the title of the menu */
.menu-title {
  /* Set the position of the title to relative, which means the following top and right positions will be relative to its normal position in the flow of the document. */
  position: relative;
  /* Move the title down by 36 pixels from its normal position. Positive values for the top property move the element downwards. */
  top: 36px;
  /* Move the title to the left by 23 pixels from its normal position. Negative values for the right property move the element to the left. */
  right: -23px;
}

/* Style for a custom heart icon in the title */
.heart-custom-title {
  /* Set the position of the heart icon to relative, which means the following right and top positions will be relative to its normal position in the flow of the document. */
  position: relative;
  /* Move the heart icon to the right by 344 pixels from its normal position. Positive values for the right property move the element to the right. */
  right: -344px;
  /* Set the font size of the heart icon to 30 pixels. */
  font-size: 30px;
  /* Move the heart icon up by 3 pixels from its normal position. Negative values for the top property move the element upwards. */
  top: -3px;
}

/* Style for the main container of the menu */
.menu-container-main {
  /* Make the container a flex container. This allows the direct children of the container to be laid out in a flexible way. */
  display: flex;
  /* Arrange the direct children of the container (flex items) in a column. */
  flex-direction: column;
  /* Add 20 pixels of space between the flex items. */
  gap: 20px;
  /* Add 27 pixels of space above the container. */
  margin-top: 27px;
}

/* Style for a grid */
.grid {
  /* Make the grid a flex container. This allows the direct children of the grid to be laid out in a flexible way. */
  display: flex;
  /* Arrange the direct children of the grid (flex items) in a column. */
  flex-direction: column;
  /* Add 20 pixels of space between the flex items. */
  gap: 20px;
}

/* Define the fadeIn animation */
@keyframes fadeIn {
  /* At the start of the animation (0%), set the opacity of the element to 0 (completely transparent) and set its visibility to hidden. */
  0% {
    opacity: 0;
    visibility: hidden;
  }
  /* At the end of the animation (100%), set the opacity of the element to 1 (completely opaque) and set its visibility to visible. */
  100% {
    opacity: 1;
    visibility: visible;
  }
}
/* Define the slideUpFadeIn animation */
@keyframes slideUpFadeIn {
  /* At the start of the animation (0%), set the opacity of the element to 0 (completely transparent) and move it down by 50 pixels. */
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  /* At the end of the animation (100%), set the opacity of the element to 1 (completely opaque) and move it back to its original position. */
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
/* Style for a card */
.card, .card-enchanted-plate, .card3 {
  /* Set the position of the card to relative. This will be the reference point for any absolute positioned child elements. */
  position: relative;
  /* Set the width of the card to 350 pixels. */
  width: 350px;
  /* Set the height of the card to 50 pixels. */
  height: 50px;
  /* Make the card a flex container. This allows the direct children of the card to be laid out in a flexible way. */
  display: flex;
  /* Arrange the direct children of the card (flex items) in a column. */
  flex-direction: column;
  /* Align the flex items to the start (left side) of the card. */
  align-items: flex-start;
  /* Distribute space evenly between the flex items. */
  justify-content: space-between;
  /* Add 10 pixels of padding inside the card. This will create 10 pixels of space between the content of the card and its borders. */
  padding: 10px;
  /* Make the corners of the card rounded. */
  border-radius: 20px;
  /* Set the background color of the card to white. */
  background-color: white;
  /* Specify a transition effect for the width property. The transition will occur over 0.3 seconds and will ease in and out. This makes the change in width smooth when the card is hovered over. */
  transition: width 0.3s ease;
  /* Add 22 pixels of space to the left of the card. */
  margin-left: 22px;
  /* Move the card down by 11 pixels from its normal position. Positive values for the top property move the element downwards. */
  top: 11px;
  /* Hide the card initially by setting its opacity to 0 (completely transparent). */
  opacity: 0;
  /* Add the slideUpFadeIn animation to the card. The animation will take 2 seconds to complete and will ease out, making it slow down towards the end. */
  animation: slideUpFadeIn 2s ease-out;
  /* Make the card remain visible after the animation is complete. */
  animation-fill-mode: forwards;
  /* Hide the checkmark initially and set its width to 0. The checkmark is moved 100px to the right (offscreen). Transition both the width, opacity and transform properties. */
}
.card .checkmark, .card-enchanted-plate .checkmark, .card .checkmark-enchanted-plate, .card-enchanted-plate .checkmark-enchanted-plate, .card3 .checkmark, .card3 .checkmark-enchanted-plate, .card .custom-checkmark, .card-enchanted-plate .custom-checkmark, .card3 .custom-checkmark {
  opacity: 0;
  width: 0;
  transform: translateX(100px);
  transition: width 0.5s, opacity 0.5s, transform 0.5s;
}

/* Style for the content of a card */
.card-content {
  /* Make the content of the card a flex container. This allows the direct children of the content to be laid out in a flexible way. */
  display: flex;
  /* Arrange the direct children of the content (flex items) in a column. */
  flex-direction: column;
  /* Align the flex items to the start (left side) of the content. */
  align-items: flex-start;
  /* Distribute space evenly between the flex items. */
  justify-content: space-between;
}

/* When the card is hovered over */
.card:hover, .card-enchanted-plate:hover, .card3:hover {
  /* Change the cursor to a pointer when it's over the card. */
  cursor: pointer;
  /* Style for the price of a card when the card is hovered over */
  /* Style for the text of a card when the card is hovered over */
  /* Make the checkmark visible and increase its width when the card is hovered over */
}
.card:hover .card-price, .card-enchanted-plate:hover .card-price, .card3:hover .card-price {
  /* Move the card price to the right by 254 pixels when the card is hovered over. Positive values for the right property move the element to the right. */
  right: -254px;
}
.card:hover .card-text-menu, .card-enchanted-plate:hover .card-text-menu, .card3:hover .card-text-menu {
  /* Set the width of the card text to 250 pixels when the card is hovered over. */
  width: 250px;
}
.card:hover .checkmark, .card-enchanted-plate:hover .checkmark, .card:hover .checkmark-enchanted-plate, .card-enchanted-plate:hover .checkmark-enchanted-plate, .card3:hover .checkmark, .card3:hover .checkmark-enchanted-plate, .card:hover .custom-checkmark, .card-enchanted-plate:hover .custom-checkmark, .card3:hover .custom-checkmark {
  /* Set the opacity of the checkmark to 1 (completely opaque) when the card is hovered over. */
  opacity: 1;
  /* Increase the width of the checkmark to 70 pixels when the card is hovered over. */
  width: 70px;
  /* Move the checkmark back to its original position when the card is hovered over. */
  transform: translateX(0);
}

/* Generate SCSS for the first 9 .card elements nested within a .grid element */
/* Target the i-th .card within each .grid */
.grid .card:nth-of-type(1), .grid .card-enchanted-plate:nth-of-type(1), .grid .card3:nth-of-type(1) {
  /* Delay the start of the animation by 0.5 seconds for each card */
  animation-delay: 0.5s;
  /* Resume the paused animation, causing each .card to start fading in after its delay period. */
  animation-play-state: running;
}

/* Target the i-th .card within each .grid */
.grid .card:nth-of-type(2), .grid .card-enchanted-plate:nth-of-type(2), .grid .card3:nth-of-type(2) {
  /* Delay the start of the animation by 0.5 seconds for each card */
  animation-delay: 1s;
  /* Resume the paused animation, causing each .card to start fading in after its delay period. */
  animation-play-state: running;
}

/* Target the i-th .card within each .grid */
.grid .card:nth-of-type(3), .grid .card-enchanted-plate:nth-of-type(3), .grid .card3:nth-of-type(3) {
  /* Delay the start of the animation by 0.5 seconds for each card */
  animation-delay: 1.5s;
  /* Resume the paused animation, causing each .card to start fading in after its delay period. */
  animation-play-state: running;
}

/* Target the i-th .card within each .grid */
.grid .card:nth-of-type(4), .grid .card-enchanted-plate:nth-of-type(4), .grid .card3:nth-of-type(4) {
  /* Delay the start of the animation by 0.5 seconds for each card */
  animation-delay: 2s;
  /* Resume the paused animation, causing each .card to start fading in after its delay period. */
  animation-play-state: running;
}

/* Target the i-th .card within each .grid */
.grid .card:nth-of-type(5), .grid .card-enchanted-plate:nth-of-type(5), .grid .card3:nth-of-type(5) {
  /* Delay the start of the animation by 0.5 seconds for each card */
  animation-delay: 2.5s;
  /* Resume the paused animation, causing each .card to start fading in after its delay period. */
  animation-play-state: running;
}

/* Target the i-th .card within each .grid */
.grid .card:nth-of-type(6), .grid .card-enchanted-plate:nth-of-type(6), .grid .card3:nth-of-type(6) {
  /* Delay the start of the animation by 0.5 seconds for each card */
  animation-delay: 3s;
  /* Resume the paused animation, causing each .card to start fading in after its delay period. */
  animation-play-state: running;
}

/* Target the i-th .card within each .grid */
.grid .card:nth-of-type(7), .grid .card-enchanted-plate:nth-of-type(7), .grid .card3:nth-of-type(7) {
  /* Delay the start of the animation by 0.5 seconds for each card */
  animation-delay: 3.5s;
  /* Resume the paused animation, causing each .card to start fading in after its delay period. */
  animation-play-state: running;
}

/* Target the i-th .card within each .grid */
.grid .card:nth-of-type(8), .grid .card-enchanted-plate:nth-of-type(8), .grid .card3:nth-of-type(8) {
  /* Delay the start of the animation by 0.5 seconds for each card */
  animation-delay: 4s;
  /* Resume the paused animation, causing each .card to start fading in after its delay period. */
  animation-play-state: running;
}

/* Target the i-th .card within each .grid */
.grid .card:nth-of-type(9), .grid .card-enchanted-plate:nth-of-type(9), .grid .card3:nth-of-type(9) {
  /* Delay the start of the animation by 0.5 seconds for each card */
  animation-delay: 4.5s;
  /* Resume the paused animation, causing each .card to start fading in after its delay period. */
  animation-play-state: running;
}

/* Adjust the width of .card-text-menu */
.card-text-menu {
  /* Take up full width of the card */
  width: 100%;
}

/* Style for a checkmark */
.checkmark, .checkmark-enchanted-plate {
  /* Set the position of the checkmark to relative, which means the following top and right positions will be relative to its normal position in the flow of the document. */
  position: relative;
  /* Set the font size of the checkmark to 25 pixels. */
  font-size: 25px;
  /* Set the color of the checkmark to white. */
  color: white;
  /* Set the width of the checkmark to 70 pixels. */
  width: 70px;
  /* Set the height of the checkmark to 70 pixels. */
  height: 70px;
  /* Set the background color of the checkmark to the value of the $tertiary-color variable. */
  background-color: #99E2D0;
  /* Make the top-right and bottom-right corners of the checkmark rounded. */
  border-top-right-radius: 20px;
  border-bottom-right-radius: 20px;
  /* Move the checkmark up by 82 pixels from its normal position. Negative values for the top property move the element upwards. */
  top: -82px;
  /* Move the checkmark to the left by 290 pixels from its normal position. Negative values for the right property move the element to the left. */
  right: -290px;
}

/* Style for a checkmark in the "enchanted plate" */
.checkmark-enchanted-plate {
  /* Inherit the styles from the .checkmark class */
  /* Set the height of the checkmark to 93 pixels. */
  height: 93px;
  /* Move the checkmark up by 105 pixels from its normal position. Negative values for the top property move the element upwards. */
  top: -105px;
}

/* Style for a custom checkmark */
.custom-checkmark {
  /* Set the position of the checkmark to relative, which means the following right and top positions will be relative to its normal position in the flow of the document. */
  position: relative;
  /* Move the checkmark to the left by 25 pixels from its normal position. Negative values for the right property move the element to the left. */
  right: -25px;
  /* Move the checkmark down by 24 pixels from its normal position. Positive values for the top property move the element downwards. */
  top: 24px;
  /* Set the height of the checkmark to 100 pixels. */
  height: 100px;
  /* Set the width of the checkmark to 100 pixels. */
  width: 100px;
}

/* Style for the title of a card */
.card-title {
  /* Set the position of the title to relative. This will be the reference point for any absolute positioned child elements. */
  position: relative;
  /* Remove any space around the text by setting the margin to 0. */
  margin: 0;
  /* Set the weight of the font to bold. */
  font-weight: bold;
  /* Set the size of the font to 19 pixels. */
  font-size: 19px;
  /* Move the title down by 4 pixels from its normal position. Positive values for the top property move the element downwards. */
  top: 4px;
}

/* Style for the text of a card menu */
.card-text-menu {
  /* Remove any space around the text by setting the margin to 0. */
  margin: 0;
  /* Set the size of the font to 16.8 pixels. */
  font-size: 16.8px;
  /* Add 11 pixels of space above the text. */
  margin-top: 11px;
  /* Specify a transition effect for the width property. The effect will last 0.3 seconds and will ease, meaning it will start slow, accelerate in the middle, and then slow down towards the end. */
  transition: width 0.3s ease;
  /* Prevent the text from wrapping to the next line. */
  white-space: nowrap;
  /* Clip the text if it overflows its container. */
  overflow: hidden;
  /* Display an ellipsis ("...") to represent clipped text. */
  text-overflow: ellipsis;
  /* Set the maximum width of the text before it gets clipped. */
  width: 310px;
  /* Treat this element as a block level element. */
  display: block;
}

/* Style for the price of a card */
.card-price {
  /* Set the position of the price to relative. This will be the reference point for any absolute positioned child elements. */
  position: relative;
  /* Set the weight of the font to bold. */
  font-weight: bold;
  /* Set the size of the font to 16 pixels. */
  font-size: 16px;
  /* Move the price to the left by 321 pixels from its normal position. Negative values for the right property move the element to the left. */
  right: -321px;
  /* Move the price up by 21 pixels from its normal position. Negative values for the top property move the element upwards. */
  top: -21px;
  /* Specify a transition effect for the right property. The effect will last 0.3 seconds and will ease, meaning it will start slow, accelerate in the middle, and then slow down towards the end. */
  transition: right 0.3s ease;
}

/* Style for the title of a grid */
.grid-title {
  /* Set the position of the title to relative. This will be the reference point for any absolute positioned child elements. */
  position: relative;
  /* Move the title to the left by 26 pixels from its normal position. Negative values for the right property move the element to the left. */
  right: -26px;
  /* Move the title down by 20 pixels from its normal position. Positive values for the top property move the element downwards. */
  top: 20px;
  /* Add 10 pixels of space below the text. */
  padding-bottom: 10px;
  /* Add a half line under the text. The line is 3 pixels high, spans 10% of the width of the text, and its color is the value of the $tertiary-color variable. */
  border-bottom: 3px solid #99E2D0;
  /* Set the width of the line to 10% of the width of the text. */
  width: 10%;
  /* Prevent the text from wrapping to the next line. */
  white-space: nowrap;
}

/* Style for a card in the "enchanted plate" */
.card-enchanted-plate {
  /* Inherit the styles from the .card class */
  /* Set the height of the card to 71 pixels. */
  height: 71px;
}

/* Style for the container of the "enchanted plate" menu in Ohmyfood */
.menu-container-ohmyfood-enchanted-plate {
  /* Set the position of the container to relative. This will be the reference point for any absolute positioned child elements. */
  position: relative;
  /* Move the container up by 114 pixels from its normal position. Negative values for the top property move the element upwards. */
  top: -114px;
  /* Set the height of the container to 1266 pixels. */
  height: 1266px;
  /* Set the width of the container to 420 pixels. */
  width: 420px;
  /* Add 50 pixels of space below the content inside the container. */
  padding-bottom: 50px;
  /* Make the top-left and top-right corners of the container rounded. */
  border-top-left-radius: 50px;
  border-top-right-radius: 50px;
  /* Set the background color of the container to F6F6F6. */
  background-color: #F6F6F6;
}

/* Style for the container of the "Le Gourmand" menu in Ohmyfood */
.menu-container-ohmyfood-Le-Gourmand {
  /* Set the position of the container to relative. This will be the reference point for any absolute positioned child elements. */
  position: relative;
  /* Move the container up by 114 pixels from its normal position. Negative values for the top property move the element upwards. */
  top: -114px;
  /* Set the height of the container to 1217 pixels. */
  height: 1217px;
  /* Set the width of the container to 420 pixels. */
  width: 420px;
  /* Add 50 pixels of space below the content inside the container. */
  padding-bottom: 50px;
  /* Make the top-left and top-right corners of the container rounded. */
  border-top-left-radius: 50px;
  border-top-right-radius: 50px;
  /* Set the background color of the container to F6F6F6. */
  background-color: #F6F6F6;
}

/* Style for devices with a screen width of at least 768 pixels and at most 990 pixels */
@media (min-width: 768px) and (max-width: 990px) {
  /* Style for the main container of the Ohmyfood menu on medium-sized devices */
  .menu-container-ohmyfood {
    /* Set the position of the container to relative. This will be the reference point for any absolute positioned child elements. */
    position: relative;
    /* Move the container up by 32 pixels from its normal position. Negative values for the top property move the element upwards. */
    top: -32px;
    /* Set the width of the container to 838 pixels. */
    width: 838px;
    /* Set the height of the container to 1255 pixels. */
    height: 1255px;
    /* Add 50 pixels of space below the content inside the container. */
    padding-bottom: 50px;
    /* Make the top-left and top-right corners of the container rounded. */
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    /* Set the background color of the container to F6F6F6. */
    background-color: #F6F6F6;
  }
  /* Style for the container of the "enchanted plate" menu in Ohmyfood on medium-sized devices */
  .menu-container-ohmyfood-enchanted-plate {
    /* Set the position of the container to relative. This will be the reference point for any absolute positioned child elements. */
    position: relative;
    /* Move the container up by 383 pixels from its normal position. Negative values for the top property move the element upwards. */
    top: -383px;
    /* Set the height of the container to 1266 pixels. */
    height: 1266px;
    /* Set the width of the container to 839 pixels. */
    width: 839px;
    /* Add 50 pixels of space below the content inside the container. */
    padding-bottom: 50px;
    /* Make the top-left and top-right corners of the container rounded. */
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    /* Set the background color of the container to F6F6F6. */
    background-color: #F6F6F6;
  }
  /* Style for the container of the "Le Gourmand" menu in Ohmyfood on medium-sized devices */
  .menu-container-ohmyfood-Le-Gourmand {
    /* Set the position of the container to relative. This will be the reference point for any absolute positioned child elements. */
    position: relative;
    /* Move the container up by 570 pixels from its normal position. Negative values for the top property move the element upwards. */
    top: -570px;
    /* Set the height of the container to 1217 pixels. */
    height: 1217px;
    /* Set the width of the container to 839 pixels. */
    width: 839px;
    /* Add 50 pixels of space below the content inside the container. */
    padding-bottom: 50px;
    /* Make the top-left and top-right corners of the container rounded. */
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    /* Set the background color of the container to F6F6F6. */
    background-color: #F6F6F6;
  }
}
/* Style for devices with a screen width of at least 991 pixels */
@media (min-width: 991px) {
  /* Style for the main container of the Ohmyfood menu on large-sized devices */
  .menu-container-ohmyfood {
    /* Set the position of the container to relative. This will be the reference point for any absolute positioned child elements. */
    position: relative;
    /* Move the container up by 59 pixels from its normal position. Negative values for the top property move the element upwards. */
    top: -59px;
    /* Set the width of the container to 420 pixels. */
    width: 420px;
    /* Set the height of the container to 1200 pixels. */
    height: 1200px;
    /* Add 50 pixels of space below the content inside the container. */
    padding-bottom: 50px;
    /* Make the top-left and top-right corners of the container rounded. */
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    /* Set the background color of the container to F6F6F6. */
    background-color: #F6F6F6;
  }
  /* Style for the container of the "enchanted plate" menu in Ohmyfood on large-sized devices */
  .menu-container-ohmyfood-enchanted-plate {
    /* Set the position of the container to relative. This will be the reference point for any absolute positioned child elements. */
    position: relative;
    /* Move the container up by 114 pixels from its normal position. Negative values for the top property move the element upwards. */
    top: -114px;
    /* Set the height of the container to 1266 pixels. */
    height: 1266px;
    /* Set the width of the container to 420 pixels. */
    width: 420px;
    /* Add 50 pixels of space below the content inside the container. */
    padding-bottom: 50px;
    /* Make the top-left and top-right corners of the container rounded. */
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    /* Set the background color of the container to F6F6F6. */
    background-color: #F6F6F6;
  }
  /* Style for the container of the "Le Gourmand" menu in Ohmyfood on large-sized devices */
  .menu-container-ohmyfood-Le-Gourmand {
    /* Set the position of the container to relative. This will be the reference point for any absolute positioned child elements. */
    position: relative;
    /* Move the container up by 114 pixels from its normal position. Negative values for the top property move the element upwards. */
    top: -114px;
    /* Set the height of the container to 1217 pixels. */
    height: 1217px;
    /* Set the width of the container to 420 pixels. */
    width: 420px;
    /* Add 50 pixels of space below the content inside the container. */
    padding-bottom: 50px;
    /* Make the top-left and top-right corners of the container rounded. */
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
    /* Set the background color of the container to F6F6F6. */
    background-color: #F6F6F6;
  }
}
.footer-content-container, .footer-container-menu, .footer-container-menu-enchanted-plate {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background-color: #353535;
  padding-top: 20px;
  padding-bottom: 50px;
}

.footer-container-menu, .footer-container-menu-enchanted-plate {
  margin-top: -57px;
  padding-bottom: 0px;
  padding-top: 0px;
}

.footer-container-menu-enchanted-plate {
  margin-top: -111px;
}

.logo-for-footer {
  position: relative;
  display: block;
  right: 61px;
  font-weight: 400;
  color: #FFFFFF;
}

.footer-row {
  padding: 0px;
  margin: 0px;
}

.footer-text-containter {
  color: white;
}

.footer-text-suggest {
  position: relative;
  right: 69px;
}

.footer-text-partner {
  position: relative;
  right: 76px;
}

.footer-text-legal {
  position: relative;
  right: 148px;
  top: 6px;
}

.footer-text-contact {
  position: relative;
  right: 141px;
  top: 15px;
}

.fa-solid.fa-utensils, .fa-handshake-angle {
  position: relative;
  right: 160px;
  top: 17px;
}

@media (min-width: 991px) {
  .footer-container-menu, .footer-container-menu-enchanted-plate {
    margin-top: 1px;
    padding-bottom: 0px;
    padding-top: 0px;
  }
  .footer-container-menu-enchanted-plate {
    margin-top: -366px;
  }
}
@media (min-width: 768px) and (max-width: 990px) {
  .footer-container-menu-enchanted-plate {
    margin-top: -381px;
  }
}
.logo img {
  display: block;
  margin: auto;
  width: 40%;
  padding-top: 5%;
  padding-bottom: 5%;
}

.logo {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1), 0 6px 6px rgba(0, 0, 0, 0.1);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  height: 100%;
}

@media (min-width: 991px) {
  .logo img {
    position: relative;
    margin: auto;
    width: fit-content;
    height: fit-content;
    right: -145px;
  }
  .logo {
    box-shadow: none;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    width: fit-content;
    height: fit-content;
  }
}
.button, .button-order, .button-restaurants {
  font-size: 16px;
  padding: 18px;
  background: linear-gradient(to right, #FF79DA, #9356DC);
  border-radius: 30px;
  color: #FFFFFF;
  border: none;
  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.1), 0 10px 10px rgba(0, 0, 0, 0.1);
  transition: background 0.3s ease, box-shadow 0.3s ease;
}
.button:hover, .button-order:hover, .button-restaurants:hover {
  background: linear-gradient(to right, #FF99E6, #A67BD3);
  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.2);
  cursor: pointer;
}

.button-restaurants {
  position: relative;
  top: -25px;
}

.button-order {
  width: 200px;
  position: relative;
  top: 35px;
  right: -99px;
}

@media (min-width: 991px) {
  .button-order {
    width: 200px;
    position: relative;
    top: 127px;
    right: 515px;
  }
}
.heart-custom {
  position: relative;
  color: #000000;
  font-size: 30px;
  top: -44px;
  right: -139px;
}
.heart-custom:hover {
  opacity: 0;
  color: #FFFFFF;
}
.heart-custom:active {
  opacity: 0;
  color: #FFFFFF;
}

.heart-custom-2 {
  position: relative;
  font-size: 30px;
  top: -74px;
  right: -139px;
  background: -webkit-linear-gradient(to right, #FF79DA, #9356DC);
  background: linear-gradient(to right, #FF79DA, #9356DC);
  -webkit-background-clip: text;
  -moz-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-text-fill-color: transparent;
  opacity: 0;
}
.heart-custom-2:hover {
  opacity: 1;
  cursor: pointer;
}
.heart-custom-2:active {
  cursor: pointer;
  opacity: 1;
}

#loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.7);
  display: block;
  z-index: 1000;
  animation: hideOverlay 2s;
  animation-delay: 0s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

#loading-spinner {
  position: fixed;
  top: 50%;
  left: 50%;
  margin-top: -25px;
  margin-left: -25px;
  z-index: 1001;
  display: block;
  animation: hideOverlay 4s;
  animation-delay: 0s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}
#loading-spinner::before {
  content: "";
  display: block;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 5px solid #9356DC;
  border-top-color: transparent;
  animation: spin 1s;
  animation-delay: 0s;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
}

.hidden-initially {
  opacity: 0;
  animation: showContent 2s;
  animation-delay: 2s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

@keyframes spin {
  to {
    transform: rotate(1turn);
  }
}
@keyframes hideOverlay {
  to {
    opacity: 0;
    visibility: hidden;
    display: none;
  }
}
@keyframes showContent {
  to {
    opacity: 1;
  }
}
* {
  margin: 0;
  padding: 0;
}

body {
  font-family: "Roboto";
}

h1, h2, h3, h4, h5, h6, header {
  font-family: "Shrikhand";
}

/*# sourceMappingURL=style.css.map */
